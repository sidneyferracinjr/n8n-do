services:
  caddy:
    container_name: caddy
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - caddy_data:/data
      - ${DATA_FOLDER}/caddy_config:/config
      - ${DATA_FOLDER}/caddy_config/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE}
      - POSTGRES_USER=${DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${DB_POSTGRESDB_USER} -d ${DB_POSTGRESDB_DATABASE}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n:latest
    restart: always
    ports:
      - 5678:5678
    environment:
      - NODE_ENV=${NODE_ENV}
      - N8N_BINARY_DATA_STORAGE_PATH=${N8N_BINARY_DATA_STORAGE_PATH}
      - CREDENTIALS_DEFAULT_NAME=${CREDENTIALS_DEFAULT_NAME}
      - DB_TYPE=${DB_TYPE}
      - DB_PING_INTERVAL_SECONDS=${DB_PING_INTERVAL_SECONDS}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - DB_POSTGRESDB_POOL_SIZE=${DB_POSTGRESDB_POOL_SIZE}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      - N8N_TEMPLATES_ENABLED=${N8N_TEMPLATES_ENABLED}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_FOLDER=${N8N_USER_FOLDER}
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_PERSONALIZATION_ENABLED=${N8N_PERSONALIZATION_ENABLED}
      - N8N_DIAGNOSTICS_ENABLED=${N8N_DIAGNOSTICS_ENABLED}
      - N8N_HIRING_BANNER_ENABLED=${N8N_HIRING_BANNER_ENABLED}
      - N8N_PUBLIC_API_SWAGGERUI_DISABLED=${N8N_PUBLIC_API_SWAGGERUI_DISABLED}
      - N8N_PUBLIC_API_DISABLED=${N8N_PUBLIC_API_DISABLED}
      - N8N_PROXY_HOPS=${N8N_PROXY_HOPS}
      - N8N_ENDPOINT_REST=${N8N_ENDPOINT_REST}
      - N8N_ENDPOINT_WEBHOOK=${N8N_ENDPOINT_WEBHOOK}
      - N8N_ENDPOINT_WEBHOOK_TEST=${N8N_ENDPOINT_WEBHOOK_TEST}
      - N8N_ENDPOINT_WEBHOOK_WAIT=${N8N_ENDPOINT_WEBHOOK_WAIT}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - EXECUTIONS_MODE=${EXECUTIONS_MODE}
      - EXECUTIONS_TIMEOUT=${EXECUTIONS_TIMEOUT}
      - EXECUTIONS_TIMEOUT_MAX=${EXECUTIONS_TIMEOUT_MAX}
      - EXECUTIONS_DATA_PRUNE=${EXECUTIONS_DATA_PRUNE}
      - EXECUTIONS_DATA_MAX_AGE=${EXECUTIONS_DATA_MAX_AGE}
      - EXECUTIONS_DATA_PRUNE_MAX_COUNT=${EXECUTIONS_DATA_PRUNE_MAX_COUNT}
      - N8N_DISABLED_MODULES=${N8N_DISABLED_MODULES}
      - DB_LOGGING_MAX_EXECUTION_TIME=${DB_LOGGING_MAX_EXECUTION_TIME}
      - N8N_EVENTBUS_LOGWRITER_KEEPLOGCOUNT=${N8N_EVENTBUS_LOGWRITER_KEEPLOGCOUNT}
      - NODE_FUNCTION_ALLOW_BUILTIN=${NODE_FUNCTION_ALLOW_BUILTIN}
      - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_ONBOARDING_FLOW_DISABLED=${N8N_ONBOARDING_FLOW_DISABLED}
      - N8N_WORKFLOW_ACTIVATION_BATCH_SIZE=${N8N_WORKFLOW_ACTIVATION_BATCH_SIZE}
      - N8N_WORKFLOW_CALLER_POLICY_DEFAULT_OPTION=${N8N_WORKFLOW_CALLER_POLICY_DEFAULT_OPTION}
      - N8N_WORKFLOW_TAGS_DISABLED=${N8N_WORKFLOW_TAGS_DISABLED}
      - WORKFLOWS_DEFAULT_NAME=${WORKFLOWS_DEFAULT_NAME}
    volumes:
      - n8n_data:/home/node/.n8n
      - ${DATA_FOLDER}/local_files:/files
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    volumes:
      - redis_data:/data

volumes:
  caddy_data:
    external: true
  n8n_data:
    external: true
  postgres_data:
    external: true
  redis_data:
    external: true
